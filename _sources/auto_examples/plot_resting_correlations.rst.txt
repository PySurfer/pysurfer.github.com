

.. _sphx_glr_auto_examples_plot_resting_correlations.py:


Display Resting-State Correlations
==================================

In this example, we show how to build up a complex visualization of a
volume-based image showing resting-state correlations across the whole brain
from a seed in the angular gyrus. We'll plot several views of both hemispheres
in a single window and manipulate the colormap to best represent the nature of
the data.





.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_resting_correlations_001.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_resting_correlations_002.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_resting_correlations_003.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_resting_correlations_004.png
            :scale: 47


.. rst-class:: sphx-glr-script-out

 Out::

    mri_vol2surf --mov /home/larsoner/custombuilds/PySurfer/examples/example_data/resting_corr.nii.gz --hemi lh --surf white --reg /home/larsoner/custombuilds/freesurfer/current/average/mni152.register.dat --projfrac-avg 0 1 0.1 --surf-fwhm 3 --o /tmp/pysurfer-v2sQ7DvXN.mgz
    mri_vol2surf --mov /home/larsoner/custombuilds/PySurfer/examples/example_data/resting_corr.nii.gz --hemi rh --surf white --reg /home/larsoner/custombuilds/freesurfer/current/average/mni152.register.dat --projfrac-avg 0 1 0.1 --surf-fwhm 3 --o /tmp/pysurfer-v2sSvyokE.mgz




|


.. code-block:: python

    import os
    from surfer import Brain, project_volume_data

    print(__doc__)

    """Bring up the visualization"""
    brain = Brain("fsaverage", "split", "inflated",
                  views=['lat', 'med'], background="white")

    """Project the volume file and return as an array"""
    mri_file = "example_data/resting_corr.nii.gz"
    reg_file = os.path.join(os.environ["FREESURFER_HOME"],
                            "average/mni152.register.dat")
    surf_data_lh = project_volume_data(mri_file, "lh", reg_file)
    surf_data_rh = project_volume_data(mri_file, "rh", reg_file)

    """
    You can pass this array to the add_overlay method for a typical activation
    overlay (with thresholding, etc.).
    """
    brain.add_overlay(surf_data_lh, min=.3, max=.7, name="ang_corr_lh", hemi='lh')
    brain.add_overlay(surf_data_rh, min=.3, max=.7, name="ang_corr_rh", hemi='rh')

    """
    You can also pass it to add_data for more control
    over the visualization. Here we'll plot the whole
    range of correlations
    """
    for overlay in brain.overlays_dict["ang_corr_lh"]:
        overlay.remove()
    for overlay in brain.overlays_dict["ang_corr_rh"]:
        overlay.remove()

    """
    We want to use an appropriate color map for these data: a divergent map that
    is centered on 0, which is a meaningful transition-point as it marks the change
    from negative correlations to positive correlations.

    We'll also plot the map with some transparency so that we can see through to
    the underlying anatomy.
    """
    brain.add_data(surf_data_lh, -.7, .7, colormap="vlag", alpha=.75,
                   hemi='lh')
    brain.add_data(surf_data_rh, -.7, .7, colormap="vlag", alpha=.75,
                   hemi='rh')

    """
    This overlay represents resting-state correlations with a
    seed in left angular gyrus. Let's plot that seed.
    """
    seed_coords = (-45, -67, 36)
    brain.add_foci(seed_coords, map_surface="white", hemi='lh')

**Total running time of the script:** ( 0 minutes  7.900 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_resting_correlations.py <plot_resting_correlations.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_resting_correlations.ipynb <plot_resting_correlations.ipynb>`

.. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
